apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: user-service
  name: user-service
spec:
  ports:
  - name: http
    port: 3003
    targetPort: 80
  selector:
    io.kompose.service: user-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: user-service
  name: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: user-service
  template:
    metadata:
      labels:
        io.kompose.service: user-service
    spec:
      containers:
      - env:
        - name: ConnectionStrings__DbConnection
          value: Server=user-db;Database=master;User=sa;Password=Your_password123;
        - name: Environment__IsInDockerCompose
          value: "True"
        - name: OpenIdConnectSettings__Authority
          value: https://accounts.google.com
        - name: OpenIdConnectSettings__ClientId
          value: <ClientId>
        - name: OpenIdConnectSettings__ClientSecret
          value: <ClientSecret>
        - name: OpenIdConnectSettings__EndSessionEndpoint
          value: https://accounts.google.com/Logout
        - name: OpenIdConnectSettings__SigninRedirectUrl
          value: http://localhost:8000/signin-oidc
        - name: TokenSettings__Audience
          value: http://localhost:80
        - name: TokenSettings__Issuer
          value: http://localhost:80
        - name: TokenSettings__Secret
          value: A_long_enough_secret_text_which_is_not_too_short_unless_there_will_be_an_error
        image: user-service:dev
        imagePullPolicy: ""
        name: user-service
        ports:
        - containerPort: 80
      restartPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: user-service
  labels:
    io.kompose.service: user-service
spec:
  rules:
    - http:
        paths:
          - path: /api/Account
            backend:
              serviceName: user-service
              servicePort: http
          - path: /signin-oidc
            backend:
              serviceName: user-service
              servicePort: http